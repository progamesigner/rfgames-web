.page-section-build {
    display: grid;
    grid-gap: var(--build-section-spacing);
    grid-template-areas: "armors" "weapons" "trinkets" "consumables" "template" "skills" "specializations";
    grid-template-columns: auto;
    margin-left: calc(-1 * var(--page-body-padding));
    margin-right: calc(-1 * var(--page-body-padding));

    @include tablet() {
        grid-template-areas: "armors weapons" "trinkets trinkets" "consumables skills" "template template" "specializations specializations";
        grid-template-columns: repeat(2, calc((var(--tablet-breakpoint) - var(--container-offset) - var(--page-body-padding) - var(--build-section-spacing)) / 2));
        margin-left: calc(-0.5 * var(--page-body-padding));
        margin-right: calc(-0.5 * var(--page-body-padding));
    }

    @include desktop() {
        grid-template-areas: "armors armors weapons weapons" "consumables consumables trinkets trinkets" "template template template template" "skills specializations specializations specializations";
        grid-template-columns: repeat(4, calc((var(--desktop-breakpoint) - var(--container-offset) - 2 * var(--page-body-padding) - 3 * var(--build-section-spacing)) / 4));
        margin-left: 0;
        margin-right: 0;
    }

    .build-card {
        --block-spacing: var(--build-section-spacing);
        --title-font-size: var(--build-section-title-font-size);

        background-color: var(--build-section-card-background-color);
        border-radius: var(--build-section-card-radius);
        max-width: 100vw;

        &.is-template {
            grid-area: template;
        }

        &.is-armors {
            grid-area: armors;
        }

        &.is-weapons {
            grid-area: weapons;
        }

        &.is-trinkets {
            grid-area: trinkets;
        }

        &.is-consumables {
            grid-area: consumables;
        }

        &.is-skills {
            grid-area: skills;
        }

        &.is-specializations {
            grid-area: specializations;
        }

        .title {
            background-color: var(--build-section-title-background-color);
            border-radius: var(--build-section-card-radius) var(--build-section-card-radius) 0 0;
            margin: 0;
            padding: var(--build-section-title-padding);
            text-align: center;
        }
    }

    .build-card-content {
        padding: var(--block-spacing);
    }

    .build-card-armor-container,
    .build-card-consumable-container,
    .build-card-skill-container,
    .build-card-weapon-container {
        .build-card-item {
            @include block(var(--build-section-item-spacing));
        }
    }

    .build-card-skill-container {
        .gw2-embed-container {
            align-items: flex-start;
            flex-direction: column;
        }
    }

    .build-card-trinket-container {
        display: grid;
        grid-gap: var(--build-section-item-spacing) 0;
        grid-template-areas: "back accessory1 accessory2" "amulet ring1 ring2";
    }

    .build-card-weapon-container {
        @include block(var(--build-section-item-spacing));

        .gw2-embed-container {
            justify-content: flex-start;
        }
    }

    .build-card-template-code-container {
        display: flex;

        .template-addon,
        .template-copy {
            @include control();
            @include unselectable();

            background-color: var(--build-section-template-addon-background-color);
            color: var(--build-section-template-addon-text-color);
            margin: calc(-1 * var(--block-spacing));
            padding: var(--build-section-template-addon-padding);
            text-align: center;
            text-transform: uppercase;
            white-space: nowrap;
        }

        .template-addon {
            border-top-right-radius: unset;
            border-bottom-right-radius: unset;
        }

        .template-code {
            color: var(--build-section-template-code-text-color);
            flex-basis: 100%;
            margin: 0 var(--block-spacing);
            overflow: hidden;
            padding: 0 var(--block-spacing);
            text-overflow: ellipsis;
            white-space: nowrap;
        }

        .template-copy {
            border-bottom-left-radius: unset;
            border-top-left-radius: unset;
            cursor: pointer;

            @include has-hover() {
                background-color: var(--build-section-template-addon-alternative-background-color);
            }
        }
    }

    .build-card-item {
        &.is-armor,
        &.is-weapon,
        &.is-trinket,
        &.is-consumable {
            display: grid;
            grid-gap: 0 var(--build-section-item-spacing);
        }

        &.is-armor,
        &.is-weapon {
            grid-template-areas: "embed name" "embed upgrade";
            grid-template-columns: var(--build-section-item-size) auto;
            grid-template-rows: repeat(2, calc(var(--build-section-item-size) / 2));
        }

        &.is-consumable,
        &.is-skill {
            grid-template-areas: "embed name";
            grid-template-columns: var(--build-section-item-size) auto;
        }

        &.is-trinket {
            grid-template-areas: "embed" "name";

            @include tablet() {
                grid-template-areas: "embed name";
                grid-template-columns: var(--build-section-item-size) auto;
            }

            .build-card-name {
                justify-content: center;

                @include tablet() {
                    justify-content: flex-start;
                }
            }
        }

        &.is-consumable,
        &.is-trinket {
            @include desktop() {
                grid-template-areas: "embed" "name";
                grid-template-columns: auto;
            }

            .build-card-name {
                @include desktop() {
                    justify-content: center;
                }
            }
        }

        &.is-back {
            grid-area: back;
        }

        &.is-accessory1 {
            grid-area: accessory1;
        }

        &.is-accessory2 {
            grid-area: accessory2;
        }

        &.is-amulet {
            grid-area: amulet;
        }

        &.is-ring1 {
            grid-area: ring1;
        }

        &.is-ring2 {
            grid-area: ring2;
        }

        &.is-skill {
            display: grid;
            grid-gap: 0 var(--build-section-item-spacing);
        }

        &.is-weapon-skill {
            grid-gap: 0;

            .build-card-name {
                display: none;
            }
        }

        .gw2-embed {
            --gw2-item-embed-size: var(--build-section-item-size);

            grid-area: embed;
            margin: 0 auto;
        }
    }

    .build-card-name,
    .build-card-upgrade-name {
        align-items: center;
        display: flex;
        grid-area: name;
        line-height: calc(var(--build-section-item-size) / 3);
    }

    .build-card-name {
        --link-color: var(--build-section-item-name-text-color);
        --link-hover-color: var(--build-section-item-name-text-hover-color);

        color: var(--build-section-item-name-text-color);
        font-size: var(--build-section-item-name-font-size);
    }

    .build-card-upgrade {
        display: grid;
        grid-area: upgrade;
        grid-gap: 0 var(--build-section-item-spacing);
        grid-template-areas: "embed name";
        grid-template-columns: var(--build-section-attachment-item-size) auto;

        .gw2-embed {
            --gw2-item-embed-size: var(--build-section-attachment-item-size);
        }
    }

    .build-card-upgrade-name {
        --link-color: var(--build-section-item-upgrade-name-text-color);
        --link-hover-color: var(--build-section-item-upgrade-name-text-hover-color);

        color: var(--build-section-item-upgrade-name-text-color);
        font-size: var(--build-section-item-upgrade-name-font-size);
    }

    .build-card-infusion {
        display: none;
    }
}

.page-section-discussion {
    padding: var(--discussion-section-padding);
}

.page-section-members {
    .columns {
        @include print() {
            flex-direction: row;
            flex-wrap: wrap;
        }
    }

    .column {
        flex-grow: 0;
        flex-shrink: 0;

        @include print() {
            flex-basis: 50%;
        }
    }
}
