/* ========================================================================== *\
 * Modifiers                                                                  *
\* ========================================================================== */
@mixin has-active() {
    &:active,
    &.is-active {
        @content;
    }
}

@mixin has-disabled() {
    &.is-disabled,
    &[disabled],
    fieldset[disabled] & {
        @content;
    }
}

@mixin has-focus() {
    &:focus,
    &.is-focused {
        @content;
    }
}

@mixin has-hover() {
    &:hover,
    &.is-hovered {
        @content;
    }
}

/* ========================================================================== *\
 * Elements                                                                   *
\* ========================================================================== */
@mixin arrow($color) {
    border: 0.125rem solid $color;
    border-right: 0;
    border-top: 0;
    content: '';
    display: block;
    height: 0.5rem;
    margin-top: -0.375rem;
    pointer-events: none;
    position: absolute;
    top: 50%;
    transform: rotate(-45deg);
    transform-origin: center;
    width: 0.5rem;
}

@mixin block($spacing: var(--block-spacing)) {
    &:not(:last-child) {
        margin-bottom: $spacing;
    }
}

@mixin control() {
    -moz-appearance: none;
    -webkit-appearance: none;
    align-items: center;
    appearance: none;
    border-radius: var(--control-radius);
    border: none;
    box-shadow: none;
    display: inline-flex;
    font-size: var(--control-font-size);
    justify-content: flex-start;
    padding: var(--control-padding-horizontal) var(--control-padding-vertical);
    position: relative;

    @include has-active() {
        outline: none;
    }

    @include has-disabled() {
        cursor: not-allowed;
    }

    @include has-focus() {
        outline: none;
    }
}

@mixin delete($background-color, $background-hover-color, $background-active-color) {
    @include unselectable();

    -moz-appearance: none;
    -webkit-appearance: none;
    appearance: none;
    background-color: $background-color;
    border-radius: var(--delete-radius);
    border: none;
    cursor: pointer;
    display: inline-block;
    pointer-events: auto;
    position: relative;

    &::before,
    &::after {
        background-color: var(--delete-color);
        content: '';
        display: block;
        left: 50%;
        position: absolute;
        top: 50%;
        transform-origin: center center;
        transform: translate(-50%, -50%) rotate(45deg);
    }

    &::before {
        height: 0.125rem;
        width: 50%;
    }

    &::after {
        height: 50%;
        width: 0.125rem;
    }

    @include has-focus() {
        background-color: $background-hover-color;
    }

    @include has-hover() {
        background-color: $background-hover-color;
    }

    @include has-active() {
        background-color: $background-active-color;
    }
}

@mixin loader($dimensions: 1rem, $width: 0.125rem) {
    animation: spin-around 360ms infinite linear;
    border-radius: var(--loader-radius);
    border: $width solid var(--loader-color);
    border-right-color: transparent;
    border-top-color: transparent;
    content: '';
    display: block;
    height: $dimensions;
    left: calc(50% - #{$dimensions / 2});
    position: absolute;
    top: calc(50% - #{$dimensions / 2});
    width: $dimensions;
}

@mixin overlay($offset: 0) {
    bottom: $offset;
    left: $offset;
    position: absolute;
    right: $offset;
    top: $offset;
}

@mixin toggler($dimensions) {
    cursor: pointer;
    display: block;
    height: $dimensions;
    position: relative;
    width: $dimensions;

    @include has-active() {
        span {
            &:nth-child(1) {
                transform: translateY(5px) rotate(45deg);
            }

            &:nth-child(2) {
                opacity: 0;
            }

            &:nth-child(3) {
                transform: translateY(-5px) rotate(-45deg);
            }
        }
    }

    span {
        background-color: currentColor;
        display: block;
        height: 0.0625rem;
        left: calc(50% - 0.5rem);
        position: absolute;
        transform-origin: center;
        transition-duration: var(--speed);
        transition-property: background-color, opacity, transform;
        transition-timing-function: var(--easing);
        width: 1rem;

        &:nth-child(1) {
            top: calc(50% - 0.375rem);
        }

        &:nth-child(2) {
            top: calc(50% - 0.0625rem);
        }

        &:nth-child(3) {
            top: calc(50% + 0.25rem);
        }
    }
}

@mixin unselectable() {
    -moz-user-select: none;
    -ms-user-select: none;
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    user-select: none;
}

/* ========================================================================== *\
 * Responsiveness                                                             *
\* ========================================================================== */
@mixin between($from, $until) {
    @media screen and (min-width: $from) and (max-width: $until) {
        @content;
    }
}

@mixin from($width) {
    @media screen and (min-width: $width) {
        @content;
    }
}

@mixin until($width) {
    @media screen and (max-width: $width) {
        @content;
    }
}

@mixin mobile() {
    @include until($tablet-breakpoint - 1) {
        @content;
    }
}

@mixin tablet() {
    @include from($tablet-breakpoint) {
        @content;
    }
}

@mixin desktop() {
    @include from($desktop-breakpoint) {
        @content;
    }
}

@mixin print() {
    @media print {
        @content;
    }
}
